library(ggplot2)
library(cowplot)
# url for data
url <- 'https://archive.ics.uci.edu/dataset/45/heart+disease'
data <- read.csv(url, header = FALSE)
View(data)
data <- read.csv('processed.cleveland.data', header = FALSE)
str(data)
head(data)
# add column names listed on website
colnames(data) <- c(
"age",
"sex",
"cp",
"trestbps",
"chol",
"fbs",
"restecg",
"thalach",
"exang",
"oldpeak",
"slope",
"ca",
"thal",
"hd"
)
View(data)
# view data structure
str(data)
# change sex category to 0 - Female and 1 - Male
data[data$sex == 0,]$sex <- 'F'
data[data$sex == 1,]$sex <- 'M'
# change sex column to categorical
data$sex <- as.factor(data$sex)
str(data)
data$cp <- as.factor(data$cp)
data$rbs <- as.factor(data$rbs)
# cp, rbs, restecg, exang, and slope are all supposed to be factors
data$cp <- as.factor(data$cp)
data$rbs <- as.factor(data$rbs)
data$exang <- as.factor(data$exang)
data$slope <- as.factor(data$slope)
data$fbs <- as.factor(data$rbs)
data$fbs
data$fbs <- as.factor(data$fbs)
str(data)
unique(data$ca)
# ca is also categorical but has question marks so change this
data$ca <- as.integer(data$ca)
data$ca <- as.factor(data$ca)
data$ca
# thal has NA values but should be categorical
data$thal <- as.integer(data$thal)
data$thal <- as.factor(data$thal)
# change hd column to 0 for healthy and 1 for unhealthy with ifelse
data$hd <- ifelse(test = data$hd == 0, yes = 'Healthy', no = 'Unhealthy')
data$hd
# number of missing rows in ca and thal
nrows(data[is.na(data$ca) | is.na(da$thal)])
# number of missing rows in ca and thal
nrow(data[is.na(data$ca) | is.na(da$thal)])
# number of missing rows in ca and thal
nrow(data[is.na(data$ca) | is.na(data$thal)])
# number of missing rows in ca and thal
nrow(data[is.na(data$ca) | is.na(data$thal),])
data[is.na(data$ca) | is.na(data$thal),]
# we want all columns but we do not want the rows where the values are NA
data <- data[!(is.na(data$ca) | is.na(data$thal)),]
# create a table for sex and heart disease
xtabs(~ hd, sex, data = data)
# create a table for sex and heart disease
xtabs(~ hd + sex, data = data)
str(data)
# table for cp
xtabs(~ hd + cp, data = data)
# table for fbs
xtabs(~ hp + fbs, data = data)
# table for fbs
xtabs(~ hd + fbs, data = data)
# table for restecg
xtabs(~ hd + restecg, data = data)
xtabs(~ hd + exang, data = data)
xtabs(~ hd + slope, data = data)
xtabs(~ hd + ca, data = data)
xtabs(~ hd + thal, data = data)
# only using sex as the predictor
logistic <- glm(hd ~ sex, data = data, family = "binomial")
# only using sex as the predictor
logistic <- glm(hd ~ sex, data = data, family = "binomial")
data$hd
str(data)
data$hd <- as.factor(data$hd)
# only using sex as the predictor
logistic <- glm(hd ~ sex, data = data, family = "binomial")
summary(logistic)
# model that uses all variables
logistic <- glm(hd ~ ., data = data, family = 'binomial')
summary(logistic)
# only using sex as the predictor - family = binomial means logistic regression
logistic <- glm(hd ~ sex, data = data, family = "binomial")
summary(logistic)
# compute R2
# log likelihood of null deviance
ll_null <- logistic$null.deviance / -2
# log likelihood of proposed
ll_proposed <- logistic$deviance / -2
# compute R squared
r_squared <- (ll_null - ll_proposed) / ll_null
r_squared
# model that uses all variables
logistic <- glm(hd ~ ., data = data, family = 'binomial')
summary(logistic)
# log likelihood of null deviance
ll_null <- logistic$null.deviance / -2
# log likelihood of proposed
ll_proposed <- logistic$deviance / -2
# compute R squared
r_squared <- (ll_null - ll_proposed) / ll_null
r_squared
pchisq?
?
?pchisq
# use equation for p-value
p_val = pchisq(2(ll_proposed - ll_null), df = length(logistic$coefficients) - 1 )
# use equation for p-value
p_val = pchisq(2(ll_proposed - ll_null), df = (length(logistic$coefficients) - 1 ))
# use equation for p-value
p_val = pchisq(2(ll_proposed - ll_null), df = (length(logistic$coefficients)- 1))
# use equation for p-value -
p_val = 1 - pchisq(2*(ll_proposed - ll_null), df = (length(logistic$coefficients)- 1))
p_val
length(data$sex == F)
len(data$sex == 'F')
length(data$sex == 'F')
length(data$sex == 1)
data$sex
r_squared
# only using sex as the predictor - family = binomial means logistic regression
logistic <- glm(hd ~ sex, data = data, family = "binomial")
# compute R2
# log likelihood of null deviance
ll_null <- logistic$null.deviance / -2
# log likelihood of proposed
ll_proposed <- logistic$deviance / -2
# compute R squared
r_squared <- (ll_null - ll_proposed) / ll_null
r_squared
